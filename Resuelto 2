//Realice un algoritmo en C# y el uso de pilas para resolver el problema de las torres de Hanoi.//
using System;
using System.Collections.Generic;

class Program
{
    static void Main()
    {
        int n = 3; // Número de discos
        Stack<int> torreA = new Stack<int>();
        Stack<int> torreB = new Stack<int>();
        Stack<int> torreC = new Stack<int>();

        // Inicializamos la torre A con los discos (del más grande al más pequeño)
        for (int i = n; i >= 1; i--)
        {
            torreA.Push(i);
        }

        // Imprimimos el estado inicial de las torres
        ImprimirTorres(torreA, torreB, torreC);
        // Resolvemos el problema de las Torres de Hanoi
        Hanoi(n, torreA, torreC, torreB);
    }

    static void Hanoi(int n, Stack<int> origen, Stack<int> destino, Stack<int> auxiliar)
    {
        if (n > 0)
        {
            // Mover n-1 discos de origen a auxiliar usando destino como auxiliar
            Hanoi(n - 1, origen, auxiliar, destino);
            // Mover el disco restante de origen a destino
            MoverDisco(origen, destino);
            // Imprimimos el estado actual de las torres
            ImprimirTorres(origen, auxiliar, destino);
            // Mover n-1 discos de auxiliar a destino usando origen como auxiliar
            Hanoi(n - 1, auxiliar, destino, origen);
        }
    }

    static void MoverDisco(Stack<int> origen, Stack<int> destino)
    {
        if (origen.Count > 0)
        {
            int disco = origen.Pop();
            destino.Push(disco);
            Console.WriteLine($"Mover disco {disco} de {NombreTorre(origen)} a {NombreTorre(destino)}");
        }
    }

    static string NombreTorre(Stack<int> torre)
    {
        if (torre == torreA) return "Torre A";
        if (torre == torreB) return "Torre B";
        if (torre == torreC) return "Torre C";
        return "Torre desconocida";
    }

    static void ImprimirTorres(Stack<int> torreA, Stack<int> torreB, Stack<int> torreC)
    {
        Console.WriteLine("Estado de las Torres:");
        Console.WriteLine("Torre A: " + string.Join(", ", torreA.ToArray()));
        Console.WriteLine("Torre B: " + string.Join(", ", torreB.ToArray()));
        Console.WriteLine("Torre C: " + string.Join(", ", torreC.ToArray()));
        Console.WriteLine();
    }

    // Declaramos las torres como variables estáticas para su uso en el método NombreTorre
    static Stack<int> torreA = new Stack<int>();
    static Stack<int> torreB = new Stack<int>();
    static Stack<int> torreC = new Stack<int>();
}
